<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netdisk.cloudserver.mapper.UserFilesMapper">

    <!-- 根据父条目查看子条目列表 -->
    <select id="selectUserItemsByItemPIdWithUserId" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
        where p_id = #{itemPId}
        and user_id = #{userId}
    </select>

    <!-- 根据 item_id 检查用户条目 -->
    <select id="selectUserItemByItemIdWithUserId" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
        where item_id = #{itemId}
        and user_id = #{userId}
    </select>

    <!-- 根据item_id删除条目 -->
    <delete id="deleteUserItemByItemIdWithUserId">
        delete
        from user_files
        where item_id = #{itemId}
        and user_id = #{userId}
    </delete>

    <!-- 删除item_id这个条目的子条目 -->
    <delete id="deleteUserItemsByPId">
        delete
        from user_files
        where p_id = #{itemPId}
    </delete>


    <!-- 新增用户条目 -->
    <insert id="insertNewItem" useGeneratedKeys="true" keyProperty="itemId">
        insert into user_files (user_id, item_name, item_type, p_id, directory_level,
        file_id, file_size, file_cover, file_extension,
        upload_time, update_time, recycle_status)
        VALUES (#{userId}, #{itemName}, #{itemType}, #{pId}, #{directoryLevel},
        #{fileId}, #{fileSize}, #{fileCover}, #{fileExtension},
        #{upLoadTime}, #{updateTime}, #{recycleStatus})
    </insert>


    <!-- 从 user_file 表中查询所有数据 -->
    <select id="selectAllUserItems" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
    </select>

    <!-- 批量增加用户条目 -->
    <insert id="batchInsertItems" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="itemId">
        insert into user_files (
        user_id, item_name, item_type, p_id, directory_level,
        file_id, file_size, file_cover, file_extension,
        upload_time, update_time, recycle_status
        ) values
        <foreach collection="itemList" item="item" separator=",">
            (
            #{item.userId}, #{item.itemName}, #{item.itemType}, #{item.pId}, #{item.directoryLevel},
            #{item.fileId}, #{item.fileSize}, #{item.fileCover}, #{item.fileExtension},
            #{item.upLoadTime}, #{item.updateTime}, #{item.recycleStatus}
            )
        </foreach>
    </insert>

    <!-- 查询一个用户所有条目 -->
    <select id="selectUserItemsByUserId" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
        where user_id = #{userId}
    </select>

    <!-- 启用禁用用户条目 -->
    <update id="updateBanStatus">
        update user_files set ban_status = #{banStatus} where item_id = #{itemId}
    </update>

    <!-- 管理员根据 item_id 删除条目 -->
    <delete id="adminDeleteUserFileByItemId">
        delete
        from user_files
        where item_id = #{itemId}
    </delete>

    <!-- item_id 查询用户条目 -->
    <select id="selectUserItemByItemId" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
        where item_id = #{itemId}
    </select>

    <!-- item_id 删除条目 -->
    <delete id="deleteUserItemByItemId">
        delete
        from user_files
        where item_id = #{itemId}
    </delete>

    <!-- 根据 itemId 查询条目下的条目 -->
    <select id="selectUserItemsByItemPId" resultType="com.netdisk.entity.UserFiles">
        select *
        from user_files
        where p_id = #{itemPId}
    </select>

</mapper>